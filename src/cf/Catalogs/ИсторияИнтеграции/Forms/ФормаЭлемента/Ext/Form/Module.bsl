#Область ОписаниеПеременных

&НаКлиенте
Перем ДокументВнешнийОбъектИсходящий, ДокументВнешнийОбъектВходящий;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ЭтоЗагрузка = Объект.Статус = Перечисления.СтатусыИнтеграции.Загружено
		ИЛИ Объект.Статус = Перечисления.СтатусыИнтеграции.ОшибкаЗагрузки;
	Элементы.ГруппаОбъектыОбмена.Заголовок = ?(ЭтоЗагрузка, "Загруженные объекты", "Выгруженные объекты");
	
	Если НЕ Объект.Ошибка Тогда
		Элементы.ГруппаТекстОшибки.Видимость = Ложь;
		Элементы.Ошибка.Видимость = Ложь;
	КонецЕсли;
	
	Если Объект.ФорматЗапросаИнтеграции = Перечисления.ФорматыЗапросовИнтеграции.JSON Тогда
		Элементы.ГруппаФорматированиеJSON.Видимость = Истина;
		
		Элементы.ЗапросИсходящий.Вид = ВидПоляФормы.ПолеHTMLДокумента;
		Элементы.ЗапросВходящий.Вид = ВидПоляФормы.ПолеHTMLДокумента;
		
		Элементы.ЗапросИсходящий.УстановитьДействие("ДокументСформирован", "ЗапросИсходящийДокументСформирован_Подключаемый");
		Элементы.ЗапросВходящий.УстановитьДействие("ДокументСформирован", "ЗапросВходящийДокументСформирован_Подключаемый");
	Иначе
		Элементы.ГруппаФорматированиеJSON.Видимость = Ложь;
		
		Если ЗначениеЗаполнено(Объект.ЗапросВходящий) Тогда
			ЗапросВходящийОтформатированный = ОтформатироватьСообщениеИнтеграции(Объект.ЗапросВходящий);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ЗапросИсходящий) Тогда
			ЗапросИсходящийОтформатированный = ОтформатироватьСообщениеИнтеграции(Объект.ЗапросИсходящий);
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Строка Из Объект.ОбъектыИнтеграции Цикл
		Строка.ЗагруженныйОбъектТипЗначения = ТипЗнч(Строка.ОбъектИнтеграции);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.ФорматЗапросаИнтеграции = ОбщегоНазначенияКлиент.ПредопределенныйЭлемент("Перечисление.ФорматыЗапросовИнтеграции.JSON") Тогда
		
		ИнициализироватьБазовыйФайлРедактораJSON();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОтображенияJSONПриИзменении(Элемент)
	
	Если ВидОтображенияJSON Тогда
		ИнициализироватьИЗаполнитьТекстомОбъект("tree");
	Иначе
		ИнициализироватьИЗаполнитьТекстомОбъект("code");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапросИсходящийДокументСформирован_Подключаемый(Элемент)
	
	ИнициализироватьИЗаполнитьТекстомОбъект("code", "Исходящий");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапросВходящийДокументСформирован_Подключаемый(Элемент)
	
	ИнициализироватьИЗаполнитьТекстомОбъект("code", "Входящий");
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РазвернутьВсе(Команда)
	
	Если ВидОтображенияJSON Тогда
		ДокументВнешнийОбъектИсходящий.expandAll();
		ДокументВнешнийОбъектВходящий.expandAll();
	Иначе
		ДокументВнешнийОбъектИсходящий.format();
		ДокументВнешнийОбъектВходящий.format();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсе(Команда)
	
	Если ВидОтображенияJSON Тогда
		ДокументВнешнийОбъектИсходящий.collapseAll();
		ДокументВнешнийОбъектВходящий.collapseAll();
	Иначе
		ДокументВнешнийОбъектИсходящий.compact();
		ДокументВнешнийОбъектВходящий.compact();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ОтформатироватьСообщениеИнтеграции(ТекстСообщенияИнтеграции)
	
	Если Объект.ФорматЗапросаИнтеграции = Перечисления.ФорматыЗапросовИнтеграции.XML И СтрНайти(ТекстСообщенияИнтеграции, "xml") <> 0 Тогда
		Запрос = ИнтеграцииСервер.ОтформатироватьXMLЧерезDOM(ТекстСообщенияИнтеграции, Истина); 
		
	Иначе
		Запрос = ТекстСообщенияИнтеграции;
		
	КонецЕсли;
	
	Возврат Запрос;

КонецФункции

&НаКлиенте
Процедура ИнициализироватьБазовыйФайлРедактораJSON()
	
#Если ВебКлиент Тогда
	ВызватьИсключение НСтр("ru = 'Редактор JSON не предназначен для веб-клиента'");
#Иначе	
	КаталогКомпоненты = КаталогВременныхФайлов() + "JSONEditor";
	КаталогНаДиске = Новый Файл(КаталогКомпоненты);
	ДвоичныеДанные = ДвоичныеДанныеМакета();
	
	Чтение = Новый ЧтениеДанных(ДвоичныеДанные);
	Файл = Новый ЧтениеZipФайла(Чтение.ИсходныйПоток());
	Файл.ИзвлечьВсе(КаталогКомпоненты);
	
	БазовыйФайлРедактораJSON = КаталогКомпоненты + ПолучитьРазделительПути() + "index.html";
	
	ЗапросИсходящийОтформатированный	= БазовыйФайлРедактораJSON;
	ЗапросВходящийОтформатированный		= БазовыйФайлРедактораJSON;
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьИЗаполнитьТекстомОбъект(ВидОтображения, ТипЗапроса = "")
	
	Если ТипЗапроса = "Исходящий" Тогда
		Если ДокументВнешнийОбъектИсходящий <> Неопределено Тогда
			ДокументВнешнийОбъектИсходящий.destroy();
		КонецЕсли;
		
		ДокументВнешнийОбъектИсходящий = Элементы.ЗапросИсходящий.Документ.defaultView.Init(ВидОтображения);
		ДокументВнешнийОбъектИсходящий.setName("Корень"); // Установка имени верхнего уровня для дерева
		ДокументВнешнийОбъектИсходящий.setText(Объект.ЗапросИсходящий);
	
	ИначеЕсли ТипЗапроса = "Входящий" Тогда
		Если ДокументВнешнийОбъектВходящий <> Неопределено Тогда
			ДокументВнешнийОбъектВходящий.destroy();
		КонецЕсли;
		
		ДокументВнешнийОбъектВходящий = Элементы.ЗапросВходящий.Документ.defaultView.Init(ВидОтображения);
		ДокументВнешнийОбъектВходящий.setName("Корень"); // Установка имени верхнего уровня для дерева
		ДокументВнешнийОбъектВходящий.setText(Объект.ЗапросВходящий);
	Иначе
		Если ДокументВнешнийОбъектИсходящий <> Неопределено Тогда
			ДокументВнешнийОбъектИсходящий.destroy();
		КонецЕсли;
		
		ДокументВнешнийОбъектИсходящий = Элементы.ЗапросИсходящий.Документ.defaultView.Init(ВидОтображения);
		ДокументВнешнийОбъектИсходящий.setName("Корень"); // Установка имени верхнего уровня для дерева
		ДокументВнешнийОбъектИсходящий.setText(Объект.ЗапросИсходящий);
		
		Если ДокументВнешнийОбъектВходящий <> Неопределено Тогда
			ДокументВнешнийОбъектВходящий.destroy();
		КонецЕсли;
		
		ДокументВнешнийОбъектВходящий = Элементы.ЗапросВходящий.Документ.defaultView.Init(ВидОтображения);
		ДокументВнешнийОбъектВходящий.setName("Корень"); // Установка имени верхнего уровня для дерева
		ДокументВнешнийОбъектВходящий.setText(Объект.ЗапросВходящий);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДвоичныеДанныеМакета()
	
	Возврат ПолучитьОбщийМакет("JSONEditor");
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции