// @strict-types
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	//Ограничение.Текст = "РазрешитьЧтение";

КонецПроцедуры // ПриЗаполненииОграниченияДоступа

// Конец СтандартныеПодсистемы.УправлениеДоступом

Процедура ОбновлениеПредопределенных() Экспорт

	ЗаполнитьСправочникКомпетенцийИзМакета();

КонецПроцедуры

#КонецОбласти // ДляВызоваИзДругихПодсистем

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьСправочникКомпетенцийИзМакета()

	ТабличныйДокументКомпетенции = Справочники.Компетенции.ПолучитьМакет("ЗаполнениеПредопределенных");

	ДеревоКомпетенций = Новый ДеревоЗначений;
	ДеревоКомпетенций.Колонки.Добавить("Наименование", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	ДеревоКомпетенций.Колонки.Добавить("ИмяПредопределенного", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	ДеревоКомпетенций.Колонки.Добавить("ТипКомпетенции", ОбщегоНазначения.ОписаниеТипаСтрока(50));

	ОбщегоНазначенияУПОСервер.ЗаполнитьДеревоЗначенийИзИерархическогоМакета(
		ТабличныйДокументКомпетенции, ДеревоКомпетенций, 4);

	СоздатьКомпетенцииИзДереваРекурсивно(ДеревоКомпетенций.Строки);

КонецПроцедуры

Процедура СоздатьКомпетенцииИзДереваРекурсивно(СтрокиДерева, РодительСсылка = Неопределено)

	Для Каждого СтрокаКомпетенции Из СтрокиДерева Цикл

		СправочникСсылка = Справочники.Компетенции.НайтиПоРеквизиту(
			"ИмяПредопределенного", СтрокаКомпетенции.ИмяПредопределенного);

		Если Не СправочникСсылка.Пустая() Тогда
			СправочникОбъект = СправочникСсылка.ПолучитьОбъект();
			СправочникОбъект.Заблокировать();
		Иначе
			СправочникОбъект = Справочники.Компетенции.СоздатьЭлемент();
			СправочникОбъект.ИмяПредопределенного = СтрокаКомпетенции.ИмяПредопределенного;
		КонецЕсли;

		СправочникОбъект.Наименование = СтрокаКомпетенции.Наименование;
		СправочникОбъект.ТипКомпетенции = Перечисления.ТипыКомпетенций[СтрокаКомпетенции.ТипКомпетенции];

		Если ЗначениеЗаполнено(РодительСсылка) Тогда
			СправочникОбъект.Родитель = РодительСсылка;
		КонецЕсли;
		
		СправочникОбъект.Записать();

		Если СтрокаКомпетенции.Строки.Количество() Тогда
			СоздатьКомпетенцииИзДереваРекурсивно(СтрокаКомпетенции.Строки, СправочникОбъект.Ссылка);
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли