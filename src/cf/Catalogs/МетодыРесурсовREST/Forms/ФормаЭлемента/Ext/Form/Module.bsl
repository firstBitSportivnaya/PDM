
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьСпискиВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.Ссылка.Пустая() Тогда
		Элементы.Владелец.Вид = ВидПоляФормы.ПолеВвода;
	КонецЕсли;
	
	УстановитьВидимость();
	
	ОбновитьОтображениеДанных();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ВидимостьПользовательскойФункции = ПолучитьЗначениеИспользуютсяПользовательскиеФункцииВСервисе(Объект.Владелец);
	Элементы.Обработчик.Видимость							= Не ВидимостьПользовательскойФункции;
	Элементы.ОбработчикПользовательскаяФункция.Видимость	= ВидимостьПользовательскойФункции;
	
КонецПроцедуры

&НаКлиенте
Процедура АвторизацияПриИзменении(Элемент)
	
	Объект.Доступ.Очистить();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипДанныхПриИзменении(Элемент)
	
	Объект.ОпределениеОбъекта = Неопределено;
	
	УстановитьВидимость();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВозвращаемыеОтветы

&НаКлиенте
Процедура ВозвращаемыеОтветыТипОтветаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ВозвращаемыеОтветы.ТекущиеДанные;
	
	ЭлементСписка = ПользовательскиеВидыОтветов.НайтиПоЗначению(ТекущиеДанные.ТипОтвета);
	
	Если ЭлементСписка = Неопределено Тогда
		ТекущиеДанные.КодОтвета = 0;
	Иначе
		ТекущиеДанные.КодОтвета = Число(ЭлементСписка.Представление);
	КонецЕсли;
	
	Если Окр(ТекущиеДанные.КодОтвета / 100) <> 2 Тогда
		ТекущиеДанные.ТипДанных = "Строка";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьСтандартнымиОтветами(Команда)
	
	ЗаполнитьСтандартнымиОтветамиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтандартнымиОтветамиНаСервере()
	
	СтандартныеКодыОтвета = УправлениеRESTСервер.ПолучитьТаблицуСтандартныхКодовОтвета();
	
	Объект.ВозвращаемыеОтветы.Загрузить(СтандартныеКодыОтвета);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьСпискиВыбора()
	
	//
	ДоступныеТипыДанных = СпецификацияRESTСервер.ПолучитьДоступныеТипыДанныхПараметра();
	
	Элементы.ЗаголовкиЗапросаТипДанных.СписокВыбора.ЗагрузитьЗначения(ДоступныеТипыДанных);
	Элементы.ПараметрыЗапросаТипДанных.СписокВыбора.ЗагрузитьЗначения(ДоступныеТипыДанных);
	Элементы.ЗаголовкиОтветаТипДанных.СписокВыбора.ЗагрузитьЗначения(ДоступныеТипыДанных);
	
	//
	ПользовательскиеВидыОтветов = ОбщегоНазначенияRESTСервер.ПолучитьПользовательскиеВидыОтветов();
	
	Элементы.ВозвращаемыеОтветыТипОтвета.СписокВыбора.ЗагрузитьЗначения(ПользовательскиеВидыОтветов.ВыгрузитьЗначения());
	
	//
	ДоступныеТипыДанных = СпецификацияRESTСервер.ПолучитьДоступныеТипыДанныхТела();
	
	Элементы.ТипДанных.СписокВыбора.ЗагрузитьЗначения(ДоступныеТипыДанных);
	Элементы.ВозвращаемыеОтветыТипДанных.СписокВыбора.ЗагрузитьЗначения(ДоступныеТипыДанных);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.ОпределениеОбъекта.Видимость = (Объект.ТипДанных = "Объект" Или Объект.ТипДанных = "Массив");
	
	Элементы.ГруппаДоступ.Видимость = (Объект.ЕстьАвторизация);
	
	ВидимостьПользовательскойФункции = ПолучитьЗначениеИспользуютсяПользовательскиеФункцииВСервисе(Объект.Владелец);
	Элементы.Обработчик.Видимость							= Не ВидимостьПользовательскойФункции;
	Элементы.ОбработчикПользовательскаяФункция.Видимость	= ВидимостьПользовательскойФункции;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначениеИспользуютсяПользовательскиеФункцииВСервисе(Ресурс)
	
	Возврат Ресурс.Владелец.ИспользуютсяПользовательскиеФункции;
	
КонецФункции

#КонецОбласти