// @strict-types

// СтандартныеПодсистемы.ОценкаПроизводительности
&НаКлиенте
Перем ИдентификаторЗамераПроведение;
// Конец СтандартныеПодсистемы.ОценкаПроизводительности

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПодготовитьФормуНаСервере();
	УстановитьВидимостьЭлементов();
	УстановитьЗаголовокФормы();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ИдентификаторЗамераПроведение = ОценкаПроизводительностиКлиент.ЗамерВремени();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ОценкаПроизводительности
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
        ОценкаПроизводительностиКлиент.УстановитьКлючевуюОперациюЗамера(ИдентификаторЗамераПроведение, "КадровыеИзмененияПроведение");
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ОценкаПроизводительности
	
	УстановитьЗаголовокФормы();

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ВидСобытияПриИзмененииНаСервере()
	
	Если Объект.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Исключение Тогда
		Объект.Субподряд	= Ложь;
		Объект.Офис			= Справочники.Офисы.ПустаяСсылка();
		Объект.Отдел		= Справочники.Отделы.ПустаяСсылка();
		Объект.Должность	= Справочники.Должности.ПустаяСсылка();
		Объект.Позиция		= Справочники.Позиции.ПустаяСсылка();
	КонецЕсли;
	
	ЗаполнитьНаставникаВПривлеченииНаПроект(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидСобытияПриИзменении(Элемент)
	
	ВидСобытияПриИзмененииНаСервере();
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаСобытияПриИзменении(Элемент)
	
	ЗаполнитьНаставникаВПривлеченииНаПроект(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	ЗаполнитьНаставникаВПривлеченииНаПроект(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура СубподрядПриИзмененииНаСервере()
	
	Если Не Объект.Субподряд Тогда
		Объект.Офис			= Справочники.Офисы.ПустаяСсылка();
		Объект.Отдел		= Справочники.Отделы.ПустаяСсылка();
		Объект.Должность	= Справочники.Должности.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СубподрядПриИзменении(Элемент)
	
	СубподрядПриИзмененииНаСервере();
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбучаемыйПриИзменении(Элемент)
	
	Элементы.Наставник.Видимость = Объект.Обучаемый;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область СлужебныеПроцедурыИФункции

//@skip-check module-unused-method
#Область СтандартныеПодсистемы

// Подключаемый выполнить команду.
// 
// Параметры:
//  Команда - КомандаФормы
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры

// Подключаемый выполнить команду на сервере.
// 
// Параметры:
//  Контекст  - Структура
//  Результат - Структура
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры

#КонецОбласти // СтандартныеПодсистемы

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	МассивВидовСобытий = Новый Массив;
	МассивВидовСобытий.Добавить(Перечисления.ВидыКадровыхСобытий.Привлечение);
	МассивВидовСобытий.Добавить(Перечисления.ВидыКадровыхСобытий.Исключение);
	
	Элементы.ВидСобытия.СписокВыбора.ЗагрузитьЗначения(МассивВидовСобытий);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Ответственный = Пользователи.ТекущийПользователь();
		
		Если Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") Тогда
			Объект.ВидОперации = Параметры.ЗначенияЗаполнения.ВидОперации;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	ЭтоИсключение = Объект.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Исключение;
	Элементы.Субподряд.Видимость				= Не ЭтоИсключение;
	Элементы.Позиция.Видимость					= Не ЭтоИсключение;
	Элементы.ГруппаДанныеСотрудника.Видимость	= Объект.Субподряд И Не ЭтоИсключение;
	
	// Наставничество
	Элементы.ГруппаНаставничество.Видимость	= Не ЭтоИсключение;
	Элементы.Наставник.Видимость			= Объект.Обучаемый;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()

	ТекстЗаголовка = НСтр("ru = 'Кадровое изменение'; en = 'Personnel change'");
	ТекстЗаголовка = ТекстЗаголовка + НСтр("ru = ' (привлечение на проект)'; en = ' (attraction to project)'");
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстЗаголовка = ТекстЗаголовка + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = ' %1 от %2'; en = ' %1 from %2'"), Объект.Номер, Формат(Объект.Дата, "ДФ=dd.MM.yyyy;"));
	Иначе
		ТекстЗаголовка = ТекстЗаголовка + НСтр("ru = ' (создание)'; en = ' (create)'");
	КонецЕсли;
	
	ЭтотОбъект.Заголовок = ТекстЗаголовка;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаставникаВПривлеченииНаПроект(ПроверятьНаНовыйДокумент)
	
	Если Не Объект.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Привлечение Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроверятьНаНовыйДокумент Тогда
		Если Не Объект.Ссылка.Пустая() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДатаСобытия) И ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		Объект.Наставник = КадровыйУчетСервер.ПолучитьАктивныхНаставниковСотрудника(Объект.ДатаСобытия, Объект.Сотрудник);
		
		Если ЗначениеЗаполнено(Объект.Наставник) Тогда
			Объект.Обучаемый				= Истина;
			Элементы.Наставник.Видимость	= Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции