// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает структуру соответствий полей загружаемого объекта.
//
// Параметры:
//  Настройка	 - СправочникСсылка.НастройкиСоответствийПолейЗагружаемыхДанных - Ссылка на элемент справочника настрек.
// 
// Возвращаемое значение:
// Структура - Структура данных соответствий загружаемого объекта.
//
Функция ПолучитьСтруктуруНастроек(Настройка) Экспорт
	
	СтруктураНастроек = Новый Структура("ОбъектМетаданных, ДанныеШапки, ДанныеТабЧастей");
	
	ДанныеНастройки = ПолучитьДанныеНастройки(Настройка);
	
	//
	СтруктураНастроек.ОбъектМетаданных = ОбщегоНазначения.ОбъектМетаданныхПоПолномуИмени(Настройка.ЗагружаемыйОбъект);
	
	// Шапка
	СтруктураНастроек.ДанныеШапки = ДанныеНастройки.ДанныеШапки.Выгрузить();
	ЗаполнитьТипыРеквизитов(СтруктураНастроек.ОбъектМетаданных, СтруктураНастроек.ДанныеШапки, "");
	
	// Таб. части
	СоответствиеДанных = Новый Соответствие;
	
	ДанныеТабЧастей = ДанныеНастройки.ДанныеТабЧастей.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ДанныеТабЧастей.Следующий() Цикл
		
		ДанныеТабЧасти = СтруктураНастроек.ДанныеШапки.СкопироватьКолонки();
		
		ДанныеТекущейТабЧасти = ДанныеТабЧастей.Выбрать();
		Пока ДанныеТекущейТабЧасти.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ДанныеТабЧасти.Добавить(), ДанныеТекущейТабЧасти);
		КонецЦикла;
		
		ЗаполнитьТипыРеквизитов(СтруктураНастроек.ОбъектМетаданных , ДанныеТабЧасти, ДанныеТабЧастей.ИмяТабличнойЧасти);
		СоответствиеДанных.Вставить(ДанныеТабЧастей.ИмяТабличнойЧасти, ДанныеТабЧасти);
	КонецЦикла;
	
	СтруктураНастроек.ДанныеТабЧастей = СоответствиеДанных;
	
	Возврат СтруктураНастроек;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеНастройки(Настройка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НастройкиСоответствийПолейЗагружаемыхДанныхТаблицаСоответствий.РеквизитШапки КАК РеквизитШапки,
	               |	НастройкиСоответствийПолейЗагружаемыхДанныхТаблицаСоответствий.ИмяРеквизита КАК ИмяРеквизита,
	               |	НастройкиСоответствийПолейЗагружаемыхДанныхТаблицаСоответствий.ИмяТабличнойЧасти КАК ИмяТабличнойЧасти,
	               |	НастройкиСоответствийПолейЗагружаемыхДанныхТаблицаСоответствий.ИмяКолонкиЗначения КАК ИмяКолонкиЗначения,
	               |	НастройкиСоответствийПолейЗагружаемыхДанныхТаблицаСоответствий.ПравилоПоиска КАК ПравилоПоиска,
	               |	НастройкиСоответствийПолейЗагружаемыхДанныхТаблицаСоответствий.СоздаватьПриНеобходимости КАК СоздаватьПриНеобходимости,
	               |	НастройкиСоответствийПолейЗагружаемыхДанныхТаблицаСоответствий.ПроизвольныйАлгоритм КАК ПроизвольныйАлгоритм
	               |ПОМЕСТИТЬ ДанныеНастройки
	               |ИЗ
	               |	Справочник.НастройкиСоответствийПолейЗагружаемыхДанных.ТаблицаСоответствий КАК НастройкиСоответствийПолейЗагружаемыхДанныхТаблицаСоответствий
	               |ГДЕ
	               |	НастройкиСоответствийПолейЗагружаемыхДанныхТаблицаСоответствий.Ссылка = &Настройка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеНастройки.ИмяРеквизита КАК ИмяРеквизита,
	               |	ДанныеНастройки.ИмяКолонкиЗначения КАК ИмяКолонкиЗначения,
	               |	ДанныеНастройки.ПравилоПоиска КАК ПравилоПоиска,
	               |	ДанныеНастройки.СоздаватьПриНеобходимости КАК СоздаватьПриНеобходимости,
	               |	ДанныеНастройки.ПроизвольныйАлгоритм КАК ПроизвольныйАлгоритм
	               |ИЗ
	               |	ДанныеНастройки КАК ДанныеНастройки
	               |ГДЕ
	               |	ДанныеНастройки.РеквизитШапки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеНастройки.ИмяТабличнойЧасти КАК ИмяТабличнойЧасти,
	               |	ДанныеНастройки.ИмяРеквизита КАК ИмяРеквизита,
	               |	ДанныеНастройки.ИмяКолонкиЗначения КАК ИмяКолонкиЗначения,
	               |	ДанныеНастройки.ПравилоПоиска КАК ПравилоПоиска,
	               |	ДанныеНастройки.СоздаватьПриНеобходимости КАК СоздаватьПриНеобходимости,
	               |	ДанныеНастройки.ПроизвольныйАлгоритм КАК ПроизвольныйАлгоритм
	               |ИЗ
	               |	ДанныеНастройки КАК ДанныеНастройки
	               |ГДЕ
	               |	НЕ ДанныеНастройки.РеквизитШапки
	               |ИТОГИ ПО
	               |	ИмяТабличнойЧасти";
	
	Запрос.УстановитьПараметр("Настройка", Настройка);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Возврат Новый Структура("ДанныеШапки, ДанныеТабЧастей",
		РезультатЗапроса.Получить(1), РезультатЗапроса.Получить(2));
	
КонецФункции

Процедура ЗаполнитьТипыРеквизитов(ОбъектМетаданных, ТаблицаДанных, ИмяТабличнойЧасти)
	
	Если ТаблицаДанных.Колонки.Найти("ТипДанных") = Неопределено Тогда
		ТаблицаДанных.Колонки.Добавить("ТипДанных", Новый ОписаниеТипов("ОписаниеТипов"));
	КонецЕсли;
	
	Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
		
		Если ЗначениеЗаполнено(ИмяТабличнойЧасти) Тогда
			
			ТабличнаяЧасть = ОбъектМетаданных.ТабличныеЧасти.Найти(ИмяТабличнойЧасти);
			Если ТабличнаяЧасть <> Неопределено Тогда
				Реквизиты = ТабличнаяЧасть.Реквизиты;
			Иначе
				Реквизиты = Неопределено;
			КонецЕсли;
		Иначе
			Реквизиты = ОбъектМетаданных.Реквизиты;
		КонецЕсли;
		
		Если Реквизиты <> Неопределено Тогда
			
			НайденныйРеквизит = Реквизиты.Найти(ТекущаяСтрока.ИмяРеквизита);
			Если НайденныйРеквизит = Неопределено И Не ЗначениеЗаполнено(ИмяТабличнойЧасти)
				И ОбщегоНазначения.ЭтоСтандартныйРеквизит(ОбъектМетаданных.СтандартныеРеквизиты, ТекущаяСтрока.ИмяРеквизита) Тогда
				
				НайденныйРеквизит = ОбъектМетаданных.СтандартныеРеквизиты[ТекущаяСтрока.ИмяРеквизита];
			КонецЕсли;
			
			Если НайденныйРеквизит <> Неопределено Тогда
				ТекущаяСтрока.ТипДанных = НайденныйРеквизит.Тип;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

