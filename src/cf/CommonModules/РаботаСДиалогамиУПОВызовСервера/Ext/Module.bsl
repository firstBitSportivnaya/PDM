////////////////////////////////////////////////////////////////////////////////
// Работа с диалогами (сервер): для серверных методов работы с диалогами.

#Область ПрограммныйИнтерфейс

// Выполняет стандартные действия при создании на сервере в форме списка.
// 
// Параметры:
//  Отказ                   - Булево.
//  СтандартнаяОбработка    - Булево.
//  ТекущаяФорма            - УправляемаяФорма.
//  ДополнительныеПараметры - Структура.
//
Процедура СписокПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ТекущаяФорма, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПолноеИмяОбъекта = ОбщегоНазначенияУПОСервер.ПолучитьИмяОбъектаПоИмениФормы(ТекущаяФорма.ИмяФормы, Истина);
	ПолноеИмяОбъекта = СтрШаблон("%1.ФормаСписка", ПолноеИмяОбъекта);
	
КонецПроцедуры

// Выполняет стандартные действия при создании на сервере в форме выбора. 
// 
// Параметры:
//  Отказ                   - Булево.
//  СтандартнаяОбработка    - Булево.
//  ТекущаяФорма            - УправляемаяФорма.
//  ДополнительныеПараметры - Структура.
//
Процедура ФормаВыбораПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ТекущаяФорма, ДополнительныеПараметры = Неопределено) Экспорт
	
	ПолноеИмяОбъекта = ОбщегоНазначенияУПОСервер.ПолучитьИмяОбъектаПоИмениФормы(ТекущаяФорма.ИмяФормы, Истина);
	ПолноеИмяОбъекта = СтрШаблон("%1.ФормаВыбора", ПолноеИмяОбъекта);
	
КонецПроцедуры

Функция ПолучитьФормуВыбораСсылочногоТипа(ТипОбъекта) Экспорт
	
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипОбъекта);
	
	Если ОбщегоНазначения.ЭтоОбъектСсылочногоТипа(ОбъектМетаданных) Тогда
		Если ОбъектМетаданных.ОсновнаяФормаДляВыбора = Неопределено Тогда
			ИмяФормыВыбора = ОбъектМетаданных.ПолноеИмя() + ".ФормаВыбора";
		Иначе
			ИмяФормыВыбора = ОбъектМетаданных.ПолноеИмя() + "." + ОбъектМетаданных.ОсновнаяФормаДляВыбора.Имя;
		КонецЕсли;
	Иначе
		ИмяФормыВыбора = Неопределено;
	КонецЕсли;
	
	Возврат ИмяФормыВыбора;
	
КонецФункции

Функция ПолучитьЗначенияПеречисленияПоТипу(ТипОбъекта) Экспорт
	
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипОбъекта);
	
	ЗначенияПеречисления = Новый СписокЗначений;
	
	Для Каждого ЗначениеЭлемент Из ОбъектМетаданных.ЗначенияПеречисления Цикл
		ЗначенияПеречисления.Добавить(Перечисления[ОбъектМетаданных.Имя][ЗначениеЭлемент.Имя], ЗначениеЭлемент.Синоним);
	КонецЦикла;
	
	Возврат ЗначенияПеречисления;
	
КонецФункции

Функция ПолучитьТипЗначенияИзХранилищаСтрокой(АдресХранилища) Экспорт
	
	ЗначениеИзХранилища = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	Если ТипЗнч(ЗначениеИзХранилища) = Тип("ТаблицаЗначений") Тогда
		ТипСтрокой = "ТаблицаЗначений";
	ИначеЕсли ТипЗнч(ЗначениеИзХранилища) = Тип("Массив") Тогда
		ТипСтрокой = "Массив";
	ИначеЕсли ТипЗнч(ЗначениеИзХранилища) = Тип("Структура") Тогда
		ТипСтрокой = "Структура";
	КонецЕсли;
		
	Возврат ТипСтрокой;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
