// @strict-types
////////////////////////////////////////////////////////////////////////////////
// Общего назначения (клиент): для клиентских и серверных функций общего назначения

#Область ПрограммныйИнтерфейс

// Получить склонение представления месяца.
// 
// Параметры:
//  ЧисловоеЗначение - Число - Числовое значение
//  СВерхнегоРегистра - Булево - С верхнего регистра
// 
// Возвращаемое значение:
//  Строка - Получить склонение представления месяца
Функция ПолучитьСклонениеПредставленияМесяца(ЧисловоеЗначение, СВерхнегоРегистра = Ложь) Экспорт
	
	Представление = "";
	КодЯзыка = ОбщегоНазначенияУПОВызовСервера.ПолучитьЯзыкТекущегоПользователя().КодЯзыка;
	
	Если ЧисловоеЗначение = 1 Тогда
		Если КодЯзыка = "en" Тогда
			Представление = "month";
		Иначе
			Представление = "месяц";
		КонецЕсли;
	ИначеЕсли 2 <= ЧисловоеЗначение И ЧисловоеЗначение <= 4 Тогда
		Если КодЯзыка = "en" Тогда
			Представление = "months";
		Иначе
			Представление = "месяца";
		КонецЕсли;
	Иначе
		Если КодЯзыка = "en" Тогда
			Представление = "months";
		Иначе
			Представление = "месяцев";
		КонецЕсли;
	КонецЕсли;
	
	Если СВерхнегоРегистра Тогда
		Представление = ТРег(Представление);
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

// Получить склонение представления года.
// 
// Параметры:
//  ЧисловоеЗначение - Число - Числовое значение
//  СВерхнегоРегистра - Булево - С верхнего регистра
// 
// Возвращаемое значение:
//  Строка - Получить склонение представления года
Функция ПолучитьСклонениеПредставленияГода(ЧисловоеЗначение, СВерхнегоРегистра = Ложь) Экспорт
	
	Представление = "";
	КодЯзыка = ОбщегоНазначенияУПОВызовСервера.ПолучитьЯзыкТекущегоПользователя().КодЯзыка;
	
	Если КодЯзыка = "en" Тогда
		Если ЧисловоеЗначение = 1 Тогда
			Представление = "year";
		Иначе
			Представление = "years";
		КонецЕсли;
	Иначе
		Если ЧисловоеЗначение < 10 Тогда
			Если ЧисловоеЗначение = 1 Тогда
				Представление = "год";
			ИначеЕсли 2 <= ЧисловоеЗначение И ЧисловоеЗначение <= 4 Тогда
				Представление = "года"
			Иначе
				Представление = "лет";
			КонецЕсли;
		Иначе
			
			ИсключенияЛет = Новый Массив;
			ИсключенияЛет.Добавить("11");
			ИсключенияЛет.Добавить("12");
			ИсключенияЛет.Добавить("13");
			ИсключенияЛет.Добавить("14");
			
			ПоследнееЧислоЗначения = Прав(Строка(ЧисловоеЗначение), 1);
			ПоследнееДваЧислаЗначения = Прав(Строка(ЧисловоеЗначение), 2);
			
			Если ПоследнееЧислоЗначения = "1" И ИсключенияЛет.Найти(ПоследнееДваЧислаЗначения) = Неопределено Тогда
				Представление = "год";
			ИначеЕсли (ПоследнееЧислоЗначения = "2" Или ПоследнееЧислоЗначения = "3" Или ПоследнееЧислоЗначения = "4")
				И ИсключенияЛет.Найти(ПоследнееДваЧислаЗначения) = Неопределено Тогда
				Представление = "года";
			Иначе
				Представление = "лет";
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Если СВерхнегоРегистра Тогда
		Представление = ТРег(Представление);
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

// Упаковывает ДанныеФормыКоллекция в массив структур. 
// Может использоваться для передачи таблицы между клиентом и сервером.
//
// Параметры:
//  ДанныеФормыКоллекция - ДанныеФормыКоллекция - Данные формы коллекции
//  ИменаКолонок		 - Массив - Массив колонок.
// 
// Возвращаемое значение:
// Массив - Массив структур.
//
Функция УпаковатьДанныеФормыКоллекция(ДанныеФормыКоллекция, ИменаКолонок) Экспорт
	
	Результат = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из ДанныеФормыКоллекция Цикл
		
		МодельСтроки = Новый Структура;
		
		Для Каждого Элемент Из ИменаКолонок Цикл
			
			Если ТипЗнч(ИменаКолонок) = Тип("Структура") Тогда
				ИмяКолонки = Элемент.Ключ;
			Иначе
				ИмяКолонки = Элемент;
			КонецЕсли;
			
			МодельСтроки.Вставить(ИмяКолонки, СтрокаТаблицы[ИмяКолонки]);
			
		КонецЦикла;
		
		Результат.Добавить(МодельСтроки);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Разбирает строку с разделителями и упаковывает значения в массив.
//
// Параметры:
//  ИсходнаяСтрока	 - Строка - Исходная строка.
//  Разделитель		 - Строка - Разделитель.
// 
// Возвращаемое значение:
// Массив - Массив подстрок.
//
Функция РазобратьСтрокуСРазделителями(ИсходнаяСтрока, Разделитель = ",") Экспорт
	
	Результат = Новый Массив;
	
	// Разделитель бывает длиной строки > 1, учитывая особенность "СтрЗаменить",
	// заменим его на редкий односимвольный разделитель - Символ(9786).
	Сепаратор = Символ(9786);
	Образец = СтрЗаменить(ИсходнаяСтрока, Разделитель, Сепаратор);
	Результат = СтрРазделить(Образец, Сепаратор, Ложь);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

#КонецОбласти // СлужебныеПроцедурыИФункции