
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПараметрыФункции = Параметры.ПараметрыФункции;
	ЗначенияПараметров = Параметры.ЗначенияПараметров;
	
	ТаблицаПараметров.Очистить();
	
	Для Каждого Параметр Из ПараметрыФункции Цикл
		
		ОписаниеТипа = Новый ОписаниеТипов(Параметр.фТипПараметра);
		
		Стр = ЗначенияПараметров.Получить(Параметр.Наименование);
		Если Стр = Неопределено Тогда
			
			НоваяСтрока = ТаблицаПараметров.Добавить();
			НоваяСтрока.Параметр = Параметр.Наименование;
			НоваяСтрока.Значение = ОписаниеТипа.ПривестиЗначение();
		Иначе
			
			НоваяСтрока = ТаблицаПараметров.Добавить();
			НоваяСтрока.Параметр = Параметр.Наименование;
			
			МассивТиповЗначения = Новый Массив;
			МассивТиповЗначения.Добавить(ТипЗнч(Стр));
			
			ОписаниеТипаЗначения = Новый ОписаниеТипов(МассивТиповЗначения);
			
			Если ОписаниеТипаЗначения = Новый ОписаниеТипов("Строка")
				И СтрНачинаетсяС(Стр, "e1cib/tempstorage/") > 0 Тогда
				
				ДанныеХранилища = ПолучитьИзВременногоХранилища(Стр);
				Если ТипЗнч(ДанныеХранилища) = Тип("Структура") Тогда
					НоваяСтрока.Значение = "Структура";
					НоваяСтрока.ЗначениеАдрес = Стр;
				ИначеЕсли ТипЗнч(ДанныеХранилища) = Тип("Массив") Тогда
					НоваяСтрока.Значение = "Массив";
					НоваяСтрока.ЗначениеАдрес = Стр;
				ИначеЕсли ТипЗнч(ДанныеХранилища) = Тип("ТаблицаЗначений") Тогда
					НоваяСтрока.Значение = "Таблица значений";
					НоваяСтрока.ЗначениеАдрес = Стр;
				КонецЕсли;
				
			ИначеЕсли ОписаниеТипа = Новый ОписаниеТипов() Или ОписаниеТипа = ОписаниеТипаЗначения Тогда
				НоваяСтрока.Значение = Стр;
				
			Иначе
				НоваяСтрока.Значение = ОписаниеТипа.ПривестиЗначение();
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьКэшЗначений(фКэшЗначений);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаПараметров

&НаКлиенте
Процедура ТаблицаПараметровЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаПараметров.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	СписокВыбора = фКэшЗначений.ДоступныеТипыЗначенияПараметра;
	РаботаСДиалогамиУПОКлиент.НачалоВыбораСоставного(
		ЭтотОбъект, Элемент, ТекущиеДанные, "Значение", СписокВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПараметровЗначениеОчистка(Элемент, СтандартнаяОбработка)
	
	Элементы.ТаблицаПараметровЗначение.ВыбиратьТип = Истина;
	
	ТекущиеДанные = Элементы.ТаблицаПараметров.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ЗначениеАдрес = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПараметровЗначениеОткрытие(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаПараметров.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСДиалогамиУПОКлиент.ОткрытиеСоставного(ЭтотОбъект, Элемент, СтандартнаяОбработка, ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ВернутьПараметрыИЗакрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьКэшЗначений(КэшированныеЗначения)
	
	КэшированныеЗначения = Новый Структура;
	
	МассивТипов = ТаблицаПараметров.Выгрузить().Колонки.Значение.ТипЗначения.Типы();
	СписокТипов = ОбщегоНазначенияУПОСервер.ПодготовитьСписокВыбораТипа(МассивТипов);
	СписокТипов.Добавить(Тип("Структура"), "Структура");
	СписокТипов.Добавить(Тип("Массив"), "Массив");
	СписокТипов.Добавить(Тип("Соответствие"), "Таблица значений");
	СписокТипов.СортироватьПоПредставлению();
	
	КэшированныеЗначения.Вставить("ДоступныеТипыЗначенияПараметра", СписокТипов);
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьПараметрыИЗакрыть(ПараметрыФормы = Ложь)
	
	СоответствиеПараметров = Неопределено;
	
	Если Не ПараметрыФормы Тогда
		
		СоответствиеПараметров = Новый Соответствие;
		Для Каждого Параметр Из ТаблицаПараметров Цикл
			Если ЗначениеЗаполнено(Параметр.ЗначениеАдрес) Тогда
				СоответствиеПараметров.Вставить(Параметр.Параметр, Параметр.ЗначениеАдрес);
			Иначе
				СоответствиеПараметров.Вставить(Параметр.Параметр, Параметр.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Закрыть(СоответствиеПараметров);
	
КонецПроцедуры

#КонецОбласти