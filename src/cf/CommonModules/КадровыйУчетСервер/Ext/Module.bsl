// @strict-types

#Область ПрограммныйИнтерфейс

Процедура ВыполнитьСозданиеКадровыхПривлеченийНаПроектПоДаннымВнешнихСистем() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КадроваяИнформацияСрезПоследних.Период КАК ДатаПривлечения,
		|	КадроваяИнформацияСрезПоследних.Сотрудник КАК Сотрудник,
		|	КадроваяИнформацияСрезПоследних.Проект КАК Проект
		|ПОМЕСТИТЬ ВТПривлеченияНаПроект
		|ИЗ
		|	РегистрСведений.КадроваяИнформация.СрезПоследних(&Период,
		|		ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Привлечение)) КАК КадроваяИнформацияСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КадроваяИнформацияСрезПоследних.Период КАК ДатаИсключения,
		|	КадроваяИнформацияСрезПоследних.Сотрудник КАК Сотрудник,
		|	КадроваяИнформацияСрезПоследних.Проект КАК Проект
		|ПОМЕСТИТЬ ВТИсключенияСПроектов
		|ИЗ
		|	РегистрСведений.КадроваяИнформация.СрезПоследних(&Период,
		|		ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Исключение)) КАК КадроваяИнформацияСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПривлеченияНаПроект.Проект КАК Проект,
		|	ВТПривлеченияНаПроект.Сотрудник КАК Сотрудник,
		|	ВТПривлеченияНаПроект.ДатаПривлечения КАК ДатаПривлечения,
		|	ВТИсключенияСПроектов.ДатаИсключения КАК ДатаИсключения
		|ПОМЕСТИТЬ ВТДанныеУчастияВПроектах
		|ИЗ
		|	ВТПривлеченияНаПроект КАК ВТПривлеченияНаПроект
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсключенияСПроектов КАК ВТИсключенияСПроектов
		|		ПО ВТПривлеченияНаПроект.Проект = ВТИсключенияСПроектов.Проект
		|		И ВТПривлеченияНаПроект.Сотрудник = ВТИсключенияСПроектов.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МИНИМУМ(НАЧАЛОПЕРИОДА(УчетРабочегоВремени.Период, ДЕНЬ)) КАК ДатаСобытия,
		|	УчетРабочегоВремени.Сотрудник КАК Сотрудник,
		|	Проекты.Ссылка КАК Проект
		|ПОМЕСТИТЬ ВТДанныеРабочегоВремени
		|ИЗ
		|	РегистрНакопления.УчетРабочегоВремени.Обороты(,, День,) КАК УчетРабочегоВремени
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Проекты КАК Проекты
		|		ПО (Проекты.Ссылка = УчетРабочегоВремени.ЗадачаПроекта.Проект)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеУчастияВПроектах КАК ВТДанныеУчастияВПроектах
		|		ПО (Проекты.Ссылка = ВТДанныеУчастияВПроектах.Проект)
		|		И УчетРабочегоВремени.Сотрудник = ВТДанныеУчастияВПроектах.Сотрудник
		|ГДЕ
		|	(ВТДанныеУчастияВПроектах.Сотрудник ЕСТЬ NULL
		|	ИЛИ НЕ ВТДанныеУчастияВПроектах.ДатаИсключения ЕСТЬ NULL
		|	И ВТДанныеУчастияВПроектах.ДатаИсключения < УчетРабочегоВремени.Период)
		|СГРУППИРОВАТЬ ПО
		|	УчетРабочегоВремени.Сотрудник,
		|	Проекты.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КадроваяИнформация.Период КАК Период,
		|	КадроваяИнформация.Сотрудник КАК Сотрудник,
		|	КадроваяИнформация.Должность КАК Должность,
		|	КадроваяИнформация.Отдел КАК Отдел,
		|	КадроваяИнформация.Офис КАК Офис,
		|	КадроваяИнформация.Позиция КАК Позиция
		|ПОМЕСТИТЬ ВТКадроваяИнформацияПолная
		|ИЗ
		|	РегистрСведений.КадроваяИнформация.СрезПоследних(&Период, Сотрудник В
		|		(ВЫБРАТЬ
		|			ВТДанныеРабочегоВремени.Сотрудник
		|		ИЗ
		|			ВТДанныеРабочегоВремени КАК ВТДанныеРабочегоВремени)) КАК КадроваяИнформация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТДанныеРабочегоВремени.Сотрудник КАК Сотрудник,
		|	ВТДанныеРабочегоВремени.ДатаСобытия КАК ДатаСобытия
		|ПОМЕСТИТЬ ВТСотрудникиИДаты
		|ИЗ
		|	ВТДанныеРабочегоВремени КАК ВТДанныеРабочегоВремени
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТСотрудникиИДаты.Сотрудник КАК Сотрудник,
		|	ВТСотрудникиИДаты.ДатаСобытия КАК ДатаСобытия,
		|	МАКСИМУМ(ВТКадроваяИнформацияПолная.Период) КАК Период
		|ПОМЕСТИТЬ ВТПериодНаДатуСобытия
		|ИЗ
		|	ВТСотрудникиИДаты КАК ВТСотрудникиИДаты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадроваяИнформацияПолная КАК ВТКадроваяИнформацияПолная
		|		ПО ВТСотрудникиИДаты.Сотрудник = ВТКадроваяИнформацияПолная.Сотрудник
		|		И ВТСотрудникиИДаты.ДатаСобытия >= ВТКадроваяИнформацияПолная.Период
		|СГРУППИРОВАТЬ ПО
		|	ВТСотрудникиИДаты.Сотрудник,
		|	ВТСотрудникиИДаты.ДатаСобытия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТПериодНаДатуСобытия.Сотрудник КАК Сотрудник,
		|	ВТПериодНаДатуСобытия.ДатаСобытия КАК ДатаСобытия,
		|	ВТПериодНаДатуСобытия.Период КАК Период,
		|	ВТКадроваяИнформацияПолная.Должность КАК Должность,
		|	ВТКадроваяИнформацияПолная.Отдел КАК Отдел,
		|	ВТКадроваяИнформацияПолная.Офис КАК Офис,
		|	ВТКадроваяИнформацияПолная.Позиция КАК Позиция
		|ПОМЕСТИТЬ ВТКадроваяИнформация
		|ИЗ
		|	ВТПериодНаДатуСобытия КАК ВТПериодНаДатуСобытия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадроваяИнформацияПолная КАК ВТКадроваяИнформацияПолная
		|		ПО ВТПериодНаДатуСобытия.Сотрудник = ВТКадроваяИнформацияПолная.Сотрудник
		|		И ВТПериодНаДатуСобытия.Период = ВТКадроваяИнформацияПолная.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДанныеРабочегоВремени.ДатаСобытия КАК ДатаСобытия,
		|	ВТДанныеРабочегоВремени.Сотрудник КАК Сотрудник,
		|	ВТДанныеРабочегоВремени.Проект КАК Проект,
		|	ЕСТЬNULL(КадровыеИзменения.Ссылка, ЗНАЧЕНИЕ(Документ.КадровыеИзменения.ПустаяСсылка)) КАК НепроведенноеПривлечение,
		|	ЕСТЬNULL(КадровыеИзменения.Субподряд, ЛОЖЬ) КАК Субподряд,
		|	ЕСТЬNULL(КадровыеИзменения.Должность, ЕСТЬNULL(КадроваяИнформация.Должность,
		|		ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка))) КАК Должность,
		|	ЕСТЬNULL(КадровыеИзменения.Позиция, ЕСТЬNULL(КадроваяИнформация.Позиция,
		|		ЗНАЧЕНИЕ(Справочник.Позиции.ПустаяСсылка))) КАК Позиция,
		|	ЕСТЬNULL(КадровыеИзменения.Отдел, ЕСТЬNULL(КадроваяИнформация.Отдел, ЗНАЧЕНИЕ(Справочник.Отделы.ПустаяСсылка))) КАК
		|		Отдел,
		|	ЕСТЬNULL(КадровыеИзменения.Офис, ЕСТЬNULL(КадроваяИнформация.Офис, ЗНАЧЕНИЕ(Справочник.Офисы.ПустаяСсылка))) КАК Офис
		|ИЗ
		|	ВТДанныеРабочегоВремени КАК ВТДанныеРабочегоВремени
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КадровыеИзменения КАК КадровыеИзменения
		|		ПО ВТДанныеРабочегоВремени.ДатаСобытия = КадровыеИзменения.ДатаСобытия
		|		И ВТДанныеРабочегоВремени.Сотрудник = КадровыеИзменения.Сотрудник
		|		И ВТДанныеРабочегоВремени.Проект = КадровыеИзменения.Проект
		|		И (КадровыеИзменения.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКадровыеИзменения.ПривлечениеНаПроект))
		|		И (КадровыеИзменения.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Привлечение))
		|		И (НЕ КадровыеИзменения.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадроваяИнформация КАК КадроваяИнформация
		|		ПО ВТДанныеРабочегоВремени.Сотрудник = КадроваяИнформация.Сотрудник
		|		И ВТДанныеРабочегоВремени.ДатаСобытия = КадроваяИнформация.ДатаСобытия
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТДанныеРабочегоВремени.ДатаСобытия";
	
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ВыборкаРезультатаЗапроса.НепроведенноеПривлечение) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Документы.КадровыеИзменения.СоздатьДокумент();
		
		ДокументОбъект.Дата			= ТекущаяДатаСеанса();
		ДокументОбъект.ДатаСобытия	= ВыборкаРезультатаЗапроса.ДатаСобытия;
		ДокументОбъект.ВидОперации	= Перечисления.ВидыОперацийКадровыеИзменения.ПривлечениеНаПроект;
		ДокументОбъект.ВидСобытия	= Перечисления.ВидыКадровыхСобытий.Привлечение;
		ДокументОбъект.Сотрудник	= ВыборкаРезультатаЗапроса.Сотрудник;
		ДокументОбъект.Проект		= ВыборкаРезультатаЗапроса.Проект;
		ДокументОбъект.Позиция		= ВыборкаРезультатаЗапроса.Позиция;
		
		Если ВыборкаРезультатаЗапроса.Субподряд Тогда
			ДокументОбъект.Должность	= ВыборкаРезультатаЗапроса.Должность;
			ДокументОбъект.Отдел		= ВыборкаРезультатаЗапроса.Отдел;
			ДокументОбъект.Офис			= ВыборкаРезультатаЗапроса.Офис;
		КонецЕсли;
		
		ДокументОбъект.Ответственный	= Пользователи.ТекущийПользователь();
		ДокументОбъект.Комментарий		= "#Создан автоматически из регламентного задания";
		
		ДокументОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#Область Наставничество

// Возвращает активного наставника сотрудника на дату.
// 
// Параметры:
//  Период - Дата - Дата события документа
//  Сотрудник - СправочникСсылка.Сотрудники - Сотрудник, для которого необходимо найти наставника
// 
// Возвращаемое значение:
//  СправочникСсылка.Сотрудники, Произвольный - Получить активных наставников сотрудника
Функция ПолучитьАктивныхНаставниковСотрудника(Период, Сотрудник) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НаставникиСрезПоследних.Наставник КАК Наставник
	|ИЗ
	|	РегистрСведений.Наставники.СрезПоследних(&Период, Обучаемый = &Сотрудник) КАК НаставникиСрезПоследних
	|ГДЕ
	|	НаставникиСрезПоследних.Активно";
	
	Запрос.УстановитьПараметр("Период"		, Период);
	Запрос.УстановитьПараметр("Сотрудник"	, Сотрудник);
	
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		Наставник = ВыборкаРезультатаЗапроса.Наставник;
	Иначе
		Наставник = Справочники.Сотрудники.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Наставник;
	
КонецФункции

// Добавляет активную запись в регистр сведений Наставники, если наставник был добавлен в документе;
// Если активная запись в регистре уже есть, а наставник был убран, то добавляет запись "Активно = Ложь" 
// 
// Параметры:
//  КадровоеИзменениеСсылка - ДокументСсылка.КадровыеИзменения - Ссылка на документ кадрового изменения
Процедура ОбработатьДанныеНаставничестваПриНеобходимости(КадровоеИзменениеСсылка) Экспорт
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(КадровоеИзменениеСсылка,
		"ВидСобытия, ДатаСобытия, Сотрудник, Обучаемый, Наставник");
	
	НаставникСотрудника = ПолучитьАктивныхНаставниковСотрудника(
		РеквизитыДокумента.ДатаСобытия, РеквизитыДокумента.Сотрудник);
	
	Если ЗначениеЗаполнено(НаставникСотрудника) Тогда
		
		Если РеквизитыДокумента.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Перевод
			Или РеквизитыДокумента.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Привлечение Тогда
			Если РеквизитыДокумента.Обучаемый
				И НаставникСотрудника <> РеквизитыДокумента.Наставник Тогда
				
				ДобавитьЗаписьНаставничество(РеквизитыДокумента.ДатаСобытия,
					НаставникСотрудника, РеквизитыДокумента.Сотрудник, Ложь);
				ДобавитьЗаписьНаставничество(РеквизитыДокумента.ДатаСобытия,
					РеквизитыДокумента.Наставник, РеквизитыДокумента.Сотрудник, Истина);
				
			ИначеЕсли Не РеквизитыДокумента.Обучаемый Тогда
				
				ДобавитьЗаписьНаставничество(РеквизитыДокумента.ДатаСобытия,
					НаставникСотрудника, РеквизитыДокумента.Сотрудник, Ложь);
				
			КонецЕсли;
			
		ИначеЕсли РеквизитыДокумента.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Увольнение Тогда
			
			ДобавитьЗаписьНаставничество(РеквизитыДокумента.ДатаСобытия,
				НаставникСотрудника, РеквизитыДокумента.Сотрудник, Ложь);
			
		Иначе
			Возврат;
			
		КонецЕсли;
		
	Иначе
		
		Если РеквизитыДокумента.Обучаемый Тогда
		
			Если РеквизитыДокумента.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Прием
				Или РеквизитыДокумента.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Перевод
				Или РеквизитыДокумента.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Привлечение Тогда
				
				ДобавитьЗаписьНаставничество(РеквизитыДокумента.ДатаСобытия,
					РеквизитыДокумента.Наставник, РеквизитыДокумента.Сотрудник, Истина);
				
			КонецЕсли;
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Добавить запись в регистр сведений Наставники.
// 
// Параметры:
//  Период - Дата - Период записи
//  Наставник - СправочникСсылка.Сотрудники - Наставник
//  Обучаемый - СправочникСсылка.Сотрудники - Обучаемый
//  Активно - Булево - Активно
Процедура ДобавитьЗаписьНаставничество(Период, Наставник, Обучаемый, Активно) Экспорт
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("Период"	, Период);
	ПараметрыЗаписи.Вставить("Наставник", Наставник);
	ПараметрыЗаписи.Вставить("Обучаемый", Обучаемый);
	ПараметрыЗаписи.Вставить("Активно"	, Активно);
	
	РегистрыСведений.Наставники.ДобавитьЗапись(ПараметрыЗаписи);
	
КонецПроцедуры

// Удалить запись из регистра сведений Наставники.
// 
// Параметры:
//  Период - Дата - Период записи
//  Наставник - СправочникСсылка.Сотрудники - Наставник
//  Обучаемый - СправочникСсылка.Сотрудники - Обучаемый
Процедура УдалитьЗаписьНаставничество(Период, Наставник, Обучаемый) Экспорт
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("Период"	, Период);
	ПараметрыЗаписи.Вставить("Наставник", Наставник);
	ПараметрыЗаписи.Вставить("Обучаемый", Обучаемый);
	
	РегистрыСведений.Наставники.УдалитьЗапись(ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти // Наставничество

#КонецОбласти // ПрограммныйИнтерфейс