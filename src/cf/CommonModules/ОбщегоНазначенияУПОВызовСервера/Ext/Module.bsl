// @strict-types

#Область ПрограммныйИнтерфейс

// Возвращает отборы динамического списка как значения заполнения при программном вводе новой строки в список.
//
// Параметры:
//  КомпоновщикНастроек  - КомпоновщикНастроекДинамическогоСписка - компоновщик настроек списка.
//
// Возвращаемое значение:
//   Структура   - значения отборов для заполнения нового элемента списка.
//
Функция ЗначенияЗаполненияДинамическогоСписка(Знач КомпоновщикНастроек) Экспорт
	
	ЗначенияЗаполнения = Новый Структура;
	
	НастройкиСписка = КомпоновщикНастроек.ПолучитьНастройки();
	ДобавитьЗначенияЗаполнения(НастройкиСписка.Отбор.Элементы, ЗначенияЗаполнения);
	
	Возврат ЗначенияЗаполнения;

КонецФункции

// Получить язык текущего пользователя.
// 
// Возвращаемое значение:
//  ОбъектМетаданныхЯзык - Получить язык текущего пользователя
Функция ПолучитьЯзыкТекущегоПользователя() Экспорт
	
	Возврат ПользователиИнформационнойБазы.ТекущийПользователь().Язык;
	
КонецФункции

Функция ЭтоТипОбъектаСсылочногоТипа(ТипОбъекта) Экспорт
	
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипОбъекта);
	
	Возврат ОбщегоНазначения.ЭтоОбъектСсылочногоТипа(ОбъектМетаданных);
	
КонецФункции

Функция ЭтоТипПеречисление(ТипОбъекта) Экспорт
	
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипОбъекта);
	
	Возврат ОбщегоНазначения.ЭтоПеречисление(ОбъектМетаданных);
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьЗначенияЗаполнения(КоллекцияОтборов, ЗначенияЗаполнения)

	Для Каждого ЭлементОтбора Из КоллекцияОтборов Цикл
	
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") 
			И ЭлементОтбора.Использование 
			И ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			
			НаименованиеОтбора = Строка(ЭлементОтбора.ЛевоеЗначение);
			Если СтрНайти(НаименованиеОтбора, ".") = 0 Тогда
				ЗначенияЗаполнения.Вставить(НаименованиеОтбора, ЭлементОтбора.ПравоеЗначение);
			КонецЕсли;
		ИначеЕсли ТипЗнч(ЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") 
			И ЭлементОтбора.Использование 
			И ЭлементОтбора.ТипГруппы <> ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе Тогда
			
			ДобавитьЗначенияЗаполнения(ЭлементОтбора.Элементы, ЗначенияЗаполнения);
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции