
#Область ОписаниеПеременных

&НаКлиенте
Перем мКэшРеквизитовФормы; // Хранит текущие значения реквизитов формы.

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьТекущиеЗначенияРеквизитовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Если Не Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗагружаемыйОбъектПриИзменении(Элемент)
	
	Объект.СинонимЗагружаемогоОбъекта = Элементы.ЗагружаемыйОбъект.ТекстРедактирования;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагружаемыйОбъектПриИзмененииПродолжение", ЭтотОбъект);
	Если Объект.ТаблицаСоответствий.Количество()
		И Объект.ЗагружаемыйОбъект <> ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			мКэшРеквизитовФормы, "ЗагружаемыйОбъект", "") Тогда
		
		ПоказатьВопрос(ОписаниеОповещения,
			НСтр("ru='Таблица соответствий будет очищена. Продолжить?';
			|en = 'The correspondence table will be cleared. Continue?'"), РежимДиалогаВопрос.ДаНет, 60);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПоказатьВводСтроки(Новый ОписаниеОповещения("КомментарийОбработкаВыбораЗавершение", ЭтотОбъект),
		Объект.Комментарий, НСтр("ru='Комментарий';en='Comment'"),, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаСоответствий

&НаКлиенте
Процедура ТаблицаСоответствийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		Элемент.ТекущиеДанные.РеквизитШапки = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствийРеквизитШапкиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаСоответствий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ИмяРеквизита = "";
	Если ТекущиеДанные.РеквизитШапки Тогда
		ТекущиеДанные.ИмяТабличнойЧасти = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствийИмяРеквизитаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаСоответствий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьВыборИзСписка(
		Новый ОписаниеОповещения("ИмяРеквизитаНачалоВыбораПродолжение", ЭтотОбъект),
		ПолучитьСписокВыбораРеквизита(Объект.ЗагружаемыйОбъект, ТекущиеДанные.РеквизитШапки, ТекущиеДанные.ИмяТабличнойЧасти),
		Элемент, Элемент.СписокВыбора.НайтиПоЗначению(ТекущиеДанные.ИмяРеквизита));
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствийИмяКолонкиЗначенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаСоответствий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ИмяКолонкиЗначенияНачалоВыбораЗавершение", ЭтотОбъект),
		ТекущиеДанные.ИмяКолонкиЗначения, НСтр("ru='Имя колонки загружаемых данных';
		|en='Name of the loaded data column'"),, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСоответствийИмяТабличнойЧастиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаСоответствий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ИмяРеквизита = "";
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоОбъекту(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.ЗагружаемыйОбъект) Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не указан загружаемый объект.';
			|en = 'The loaded object is not specified.'"),, "ЗагружаемыйОбъект", "Объект.ЗагружаемыйОбъект");
	Иначе
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоОбъектуПродолжение", ЭтотОбъект);
		Если Объект.ТаблицаСоответствий.Количество() Тогда
			
			ПоказатьВопрос(ОписаниеОповещения,
				НСтр("ru='Таблица соответствий будет очищена. Продолжить?';
				|en = 'The correspondence table will be cleared. Continue?'"), РежимДиалогаВопрос.ДаНет, 60);
		Иначе
			ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область УправлениеФормой

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ЗаполнитьСписокВыбораЗагружаемыйОбъект(ЭтотОбъект);
	ЗаполнитьСписокВыбораРеквизита(ЭтотОбъект, Объект.ЗагружаемыйОбъект,
		МетаданныеОбъекта, Объект.ТаблицаСоответствий);
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	МетаданныеОбъекта = ПоместитьВоВременноеХранилище(
		Новый Структура("МетаданныеОбъекта", ОбщегоНазначения.ОбъектМетаданныхПоПолномуИмени(Объект.ЗагружаемыйОбъект)),
		УникальныйИдентификатор);
	
	ЗаполнитьСписокВыбораТабличныеЧасти(ЭтотОбъект, Объект.ЗагружаемыйОбъект, МетаданныеОбъекта);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСКэшемРеквизитовФормы

// Процедура заполняет кэш реквизитов формы данными объекта.
// 
&НаКлиенте 
Процедура ЗаполнитьТекущиеЗначенияРеквизитовФормы()
	
	мКэшРеквизитовФормы = Новый Структура;
	мКэшРеквизитовФормы.Вставить("ЗагружаемыйОбъект");
	мКэшРеквизитовФормы.Вставить("СинонимЗагружаемогоОбъекта");
	
	Для Каждого КлючИЗначение Из мКэшРеквизитовФормы Цикл
		мКэшРеквизитовФормы[КлючИЗначение.Ключ] = Объект[КлючИЗначение.Ключ];
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьТекущиеЗначенияРеквизитовФормы()

// Процедура добавляет в кэш реквизитов текущее значение заданного реквизита.
// 
// Параметры:
// 	ИмяРеквизита - Строка.
// 
&НаКлиенте
Процедура ДобавитьВКэш(ИмяРеквизита)
	
	мКэшРеквизитовФормы[ИмяРеквизита] = Объект[ИмяРеквизита];
	
КонецПроцедуры // ДобавитьВКэш()

// Процедура извлекает из кэша и присваивает объекту значение заданного реквизита.
// 
// Параметры:
// 	ИмяРеквизита - Строка.
// 
&НаКлиенте
Процедура ИзвлечьИзКэша(ИмяРеквизита)
	
	Объект[ИмяРеквизита] = мКэшРеквизитовФормы[ИмяРеквизита];
	
КонецПроцедуры // ИзвлечьИзКэша()

#КонецОбласти

#Область ОписанияОповещения

&НаКлиенте
Процедура ЗагружаемыйОбъектПриИзмененииПродолжение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ДобавитьВКэш("ЗагружаемыйОбъект");
		ДобавитьВКэш("СинонимЗагружаемогоОбъекта");
		
		Объект.ТаблицаСоответствий.Очистить();
		УправлениеФормой();
	Иначе
		
		ИзвлечьИзКэша("ЗагружаемыйОбъект");
		ИзвлечьИзКэша("СинонимЗагружаемогоОбъекта");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОбъектуПродолжение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗагружаемыйОбъектПриИзмененииЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяРеквизитаНачалоВыбораПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	ТекущиеДанные = Элементы.ТаблицаСоответствий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Или Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ИмяРеквизита = Результат.Значение;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяКолонкиЗначенияНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТекущиеДанные = Элементы.ТаблицаСоответствий.ТекущиеДанные;
	
	Если Результат <> Неопределено И ТекущиеДанные <> Неопределено Тогда
		
		ТекущиеДанные.ИмяКолонкиЗначения = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОбработкаВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Объект.Комментарий = Результат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСМетаданными

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокВыбораЗагружаемыйОбъект(Форма)
	
	Элементы = Форма.Элементы;
	СписокВыбора = Элементы.ЗагружаемыйОбъект.СписокВыбора;
	
	ВидыМетаданных = Новый Массив();
	ВидыМетаданных.Добавить(Метаданные.Справочники);
	ВидыМетаданных.Добавить(Метаданные.Документы);
	
	Для Каждого ВидМетаданных Из ВидыМетаданных Цикл
		
		Для Каждого ТекущийОбъект Из ВидМетаданных Цикл
			СписокВыбора.Добавить(ТекущийОбъект.ПолноеИмя(), ТекущийОбъект.Синоним);
		КонецЦикла;
	КонецЦикла;
	
	СписокВыбора.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокВыбораТабличныеЧасти(Форма, ЗагружаемыйОбъект, Знач МетаданныеОбъекта)
	
	Элементы = Форма.Элементы;
	СписокВыбора = Элементы.ТаблицаСоответствийИмяТабличнойЧасти.СписокВыбора;
	
	СписокВыбора.Очистить();
	
	Если Не ЗначениеЗаполнено(ЗагружаемыйОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеОбъекта = ПолучитьОбъектМетаданных(МетаданныеОбъекта);
	Если МетаданныеОбъекта = Неопределено Тогда
		
		МетаданныеОбъекта = ОбщегоНазначения.ОбъектМетаданныхПоПолномуИмени(ЗагружаемыйОбъект);
		Если МетаданныеОбъекта = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СписокТабЧастей = ПолучитьСписокТабЧастей(ЗагружаемыйОбъект, МетаданныеОбъекта);
	Для Каждого ТекущаяТабЧасть Из СписокТабЧастей Цикл
		ЗаполнитьЗначенияСвойств(СписокВыбора.Добавить(), ТекущаяТабЧасть);
	КонецЦикла;
	
	СписокВыбора.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокВыбораРеквизита(Форма, ЗагружаемыйОбъект, Знач МетаданныеОбъекта, ТаблицаСоответствий)
	
	Элементы = Форма.Элементы;
	СписокВыбора = Элементы.ТаблицаСоответствийИмяРеквизита.СписокВыбора;
	
	СписокВыбора.Очистить();
	
	Если Не ЗначениеЗаполнено(ЗагружаемыйОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеОбъекта = ПолучитьОбъектМетаданных(МетаданныеОбъекта);
	Если МетаданныеОбъекта = Неопределено Тогда
		
		МетаданныеОбъекта = ОбщегоНазначения.ОбъектМетаданныхПоПолномуИмени(ЗагружаемыйОбъект);
		Если МетаданныеОбъекта = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Реквизиты шапки.
	СписокРеквизитов = ПолучитьСписокРеквизитовОбъекта(ЗагружаемыйОбъект, МетаданныеОбъекта);
	Для Каждого ТекущийРеквизит Из СписокРеквизитов Цикл
		ЗаполнитьЗначенияСвойств(СписокВыбора.Добавить(), ТекущийРеквизит);
	КонецЦикла;
	
	// Реквизиты таб. частей.
	ДанныеПоиска = ТаблицаСоответствий.НайтиСтроки(Новый Структура("РеквизитШапки", Ложь));
	Для Каждого СтрокаПоиска Из ДанныеПоиска Цикл
		
		Если ЗначениеЗаполнено(СтрокаПоиска.ИмяТабличнойЧасти) Тогда
			
			СписокРеквизитов = ПолучитьСписокРеквизитовТабЧасти(
				ЗагружаемыйОбъект, МетаданныеОбъекта, СтрокаПоиска.ИмяТабличнойЧасти);
			Для Каждого ТекущийРеквизит Из СписокРеквизитов Цикл
				ЗаполнитьЗначенияСвойств(СписокВыбора.Добавить(), ТекущийРеквизит);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	СписокВыбора.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокВыбораРеквизита(ЗагружаемыйОбъект, РеквизитШапки, ИмяТабличнойЧасти)
	
	СписокВыбора = Новый СписокЗначений();
	
	Если РеквизитШапки Тогда
		СписокВыбора = ПолучитьСписокРеквизитовОбъекта(ЗагружаемыйОбъект);
	ИначеЕсли ЗначениеЗаполнено(ИмяТабличнойЧасти) Тогда
		СписокВыбора = ПолучитьСписокРеквизитовТабЧасти(ЗагружаемыйОбъект,, ИмяТабличнойЧасти);
	Иначе
		//
	КонецЕсли;
	
	Возврат СписокВыбора;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокТабЧастей(ЗагружаемыйОбъект, Знач МетаданныеОбъекта = Неопределено)
	
	СписокТабЧастей = Новый СписокЗначений;
	
	Если Не ЗначениеЗаполнено(ЗагружаемыйОбъект) Тогда
		Возврат СписокТабЧастей;
	КонецЕсли;
	
	МетаданныеОбъекта = ПолучитьОбъектМетаданных(МетаданныеОбъекта);
	Если МетаданныеОбъекта = Неопределено Тогда
		
		МетаданныеОбъекта = ОбщегоНазначения.ОбъектМетаданныхПоПолномуИмени(ЗагружаемыйОбъект);
		Если МетаданныеОбъекта = Неопределено Тогда
			Возврат СписокТабЧастей;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого ТекущаяТабЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		СписокТабЧастей.Добавить(ТекущаяТабЧасть.Имя, ТекущаяТабЧасть.Синоним);
	КонецЦикла;
	
	Возврат СписокТабЧастей;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокРеквизитовОбъекта(ЗагружаемыйОбъект, Знач МетаданныеОбъекта = Неопределено)
	
	СписокРеквизитов = Новый СписокЗначений;
	
	Если Не ЗначениеЗаполнено(ЗагружаемыйОбъект) Тогда
		Возврат СписокРеквизитов;
	КонецЕсли;
	
	МетаданныеОбъекта = ПолучитьОбъектМетаданных(МетаданныеОбъекта);
	Если МетаданныеОбъекта = Неопределено Тогда
		
		МетаданныеОбъекта = ОбщегоНазначения.ОбъектМетаданныхПоПолномуИмени(ЗагружаемыйОбъект);
		Если МетаданныеОбъекта = Неопределено Тогда
			Возврат СписокРеквизитов;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого ТекущийРеквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		СписокРеквизитов.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
	КонецЦикла;
	
	Для Каждого ТекущийРеквизит Из МетаданныеОбъекта.Реквизиты Цикл
		СписокРеквизитов.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
	КонецЦикла;
	
	Возврат СписокРеквизитов;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокРеквизитовТабЧасти(ЗагружаемыйОбъект, Знач МетаданныеОбъекта = Неопределено, ИмяТабличнойЧасти = "")
	
	СписокРеквизитов = Новый СписокЗначений;
	
	Если Не ЗначениеЗаполнено(ЗагружаемыйОбъект) Тогда
		Возврат СписокРеквизитов;
	КонецЕсли;
	
	МетаданныеОбъекта = ПолучитьОбъектМетаданных(МетаданныеОбъекта);
	Если МетаданныеОбъекта = Неопределено Тогда
		
		МетаданныеОбъекта = ОбщегоНазначения.ОбъектМетаданныхПоПолномуИмени(ЗагружаемыйОбъект);
		Если МетаданныеОбъекта = Неопределено Тогда
			Возврат СписокРеквизитов;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяТабличнойЧасти) Тогда
		
		ТабличнаяЧасть = МетаданныеОбъекта.ТабличныеЧасти.Найти(ИмяТабличнойЧасти);
		Если ТабличнаяЧасть <> Неопределено Тогда
			
			Для Каждого ТекущийРеквизит Из ТабличнаяЧасть.Реквизиты Цикл
				СписокРеквизитов.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
			КонецЦикла;
		КонецЕсли;
	Иначе
		
		Для Каждого ТекущаяТабЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
			
			Для Каждого ТекущийРеквизит Из ТекущаяТабЧасть.Реквизиты Цикл
				СписокРеквизитов.Добавить(ТекущийРеквизит.Имя, ТекущийРеквизит.Синоним);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Возврат СписокРеквизитов;
	
КонецФункции

#КонецОбласти //РаботаСМетаданными

&НаСервереБезКонтекста
Функция ПолучитьОбъектМетаданных(Знач МетаданныеОбъекта)
	
	Если ТипЗнч(МетаданныеОбъекта) = Тип("ОбъектМетаданных") Тогда
		Возврат МетаданныеОбъекта;
	ИначеЕсли ЗначениеЗаполнено(МетаданныеОбъекта) Тогда
		МетаданныеОбъекта = ПолучитьИзВременногоХранилища(МетаданныеОбъекта);
	КонецЕсли;
	
	Если ТипЗнч(МетаданныеОбъекта) = Тип("Структура") Тогда
		Возврат ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(МетаданныеОбъекта, "МетаданныеОбъекта", Неопределено);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗагружаемыйОбъектПриИзмененииЗавершение()
	
	Объект.ТаблицаСоответствий.Очистить();
	
	СтруктураСвойств = Новый Структура("РеквизитШапки, ИмяТабличнойЧасти, ИмяРеквизита, ПравилоПоиска",
		Истина, "", "", Перечисления.ПравилаПоискаОбъектов.Идентификатор);
	
	СписокРеквизитовОбъекта = ПолучитьСписокРеквизитовОбъекта(Объект.ЗагружаемыйОбъект, МетаданныеОбъекта);
	Для Каждого ТекущийРеквизит Из СписокРеквизитовОбъекта Цикл
		
		СтруктураСвойств.ИмяРеквизита = ТекущийРеквизит.Значение;
		ЗаполнитьЗначенияСвойств(Объект.ТаблицаСоответствий.Добавить(), СтруктураСвойств);
	КонецЦикла;
	
	СтруктураСвойств.РеквизитШапки = Ложь;
	
	СписокТабЧастей = ПолучитьСписокТабЧастей(Объект.ЗагружаемыйОбъект, МетаданныеОбъекта);
	Для Каждого ТекущаяТабЧасть Из СписокТабЧастей Цикл
		
		СписокРеквизитовТабЧасти = ПолучитьСписокРеквизитовТабЧасти(
			Объект.ЗагружаемыйОбъект, МетаданныеОбъекта, ТекущаяТабЧасть.Значение);
		
		Для Каждого ТекущийРеквизит Из СписокРеквизитовТабЧасти Цикл
			
			СтруктураСвойств.ИмяРеквизита = ТекущийРеквизит.Значение;
			СтруктураСвойств.ИмяТабличнойЧасти = ТекущаяТабЧасть.Значение;
			ЗаполнитьЗначенияСвойств(Объект.ТаблицаСоответствий.Добавить(), СтруктураСвойств);
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти