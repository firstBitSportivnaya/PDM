// @strict-types
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();

	ПараметрПериод = Новый ПараметрКомпоновкиДанных("Период");
	ЗначениеПериода = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрПериод);
	ПользовательскийПериод = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
		ЗначениеПериода.ИдентификаторПользовательскойНастройки);
	Если ТипЗнч(ПользовательскийПериод.Значение) = Тип("СтандартнаяДатаНачала") Тогда
		ЗначениеДаты = ПользовательскийПериод.Значение.Дата;
	Иначе
		ЗначениеДаты = ПользовательскийПериод.Значение;
	КонецЕсли;
	
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрПериод, ЗначениеДаты);
	
	ТаблицаХардКомпетенций = ПолучитьТаблицуХардКомпетенций(ЗначениеДаты);
	НаборыДанных = Новый Структура("ХардКомпетенции", ТаблицаХардКомпетенций);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, НаборыДанных, ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуХардКомпетенций(Период)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫРАЗИТЬ(ТЗГрадацииКомпетенций.Компетенция КАК Справочник.Компетенции) КАК Компетенция,
		|	ВЫРАЗИТЬ(ТЗГрадацииКомпетенций.УровеньЗнания КАК Перечисление.УровниЗнания) КАК УровеньЗнания,
		|	ВЫРАЗИТЬ(ТЗГрадацииКомпетенций.ЧасовОт КАК ЧИСЛО(7, 2)) КАК ЧасовОт,
		|	ВЫРАЗИТЬ(ТЗГрадацииКомпетенций.ЧасовДо КАК ЧИСЛО(7, 2)) КАК ЧасовДо
		|ПОМЕСТИТЬ ВТГрадацииКомпетенций
		|ИЗ
		|	&ТЗГрадацииКомпетенций КАК ТЗГрадацииКомпетенций
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Компетенции.Ссылка КАК Компетенция
		|ПОМЕСТИТЬ ВТКомпетенции
		|ИЗ
		|	Справочник.Компетенции КАК Компетенции
		|ГДЕ
		|	Компетенции.ТипКомпетенции = ЗНАЧЕНИЕ(Перечисление.ТипыКомпетенций.Профессиональные)
		|;
		|
		|ВЫБРАТЬ
		|	УчетВремениПоКомпетенциямОстатки.Сотрудник КАК Сотрудник,
		|	УчетВремениПоКомпетенциямОстатки.Компетенция КАК Компетенция,
		|	УчетВремениПоКомпетенциямОстатки.ЧасовОстаток КАК Часов
		|ПОМЕСТИТЬ ВТНарастающийИтогКомпетенций
		|ИЗ
		|	РегистрНакопления.УчетВремениПоКомпетенциям.Остатки(&Период, ) КАК УчетВремениПоКомпетенциямОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТУчетВремениКомпетенцийСрезПоследних.Период КАК Период,
		|	ВТУчетВремениКомпетенцийСрезПоследних.Сотрудник КАК Сотрудник,
		|	ВТУчетВремениКомпетенцийСрезПоследних.Компетенция КАК Компетенция,
		|	ВТГрадацииКомпетенций.УровеньЗнания КАК ПрошлыйУровень,
		|	ВТНарастающийИтогКомпетенций.Часов КАК Часов
		|ПОМЕСТИТЬ ВТРассчитанныеКомпетенции
		|ИЗ
		|	ВТУчетВремениКомпетенцийСрезПоследних КАК ВТУчетВремениКомпетенцийСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНарастающийИтогКомпетенций КАК ВТНарастающийИтогКомпетенций
		|		ПО ВТУчетВремениКомпетенцийСрезПоследних.Сотрудник = ВТНарастающийИтогКомпетенций.Сотрудник
		|		И ВТУчетВремениКомпетенцийСрезПоследних.Компетенция = ВТНарастающийИтогКомпетенций.Компетенция
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГрадацииКомпетенций КАК ВТГрадацииКомпетенций
		|		ПО ВТНарастающийИтогКомпетенций.Компетенция = ВТГрадацииКомпетенций.Компетенция
		|		И (ВТГрадацииКомпетенций.ЧасовОт <= ВТНарастающийИтогКомпетенций.Часов
		|		И ВТНарастающийИтогКомпетенций.Часов < ВТГрадацииКомпетенций.ЧасовДо
		|		ИЛИ ВТНарастающийИтогКомпетенций.Часов >= ВТГрадацииКомпетенций.ЧасовОт
		|		И ВТГрадацииКомпетенций.ЧасовДо = 0)
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РезультатыОценкиСотрудниковСрезПоследних.Период КАК Период,
		|	РезультатыОценкиСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	РезультатыОценкиСотрудниковСрезПоследних.Компетенция КАК Компетенция,
		|	РезультатыОценкиСотрудниковСрезПоследних.УровеньЗнания КАК ПрошлыйУровень
		|ПОМЕСТИТЬ ВТРезультатыПоследнегоРевью
		|ИЗ
		|	РегистрСведений.РезультатыОценкиСотрудников.СрезПоследних(&Период, Компетенция В
		|		(ВЫБРАТЬ
		|			ВТКомпетенции.Компетенция
		|		ИЗ
		|			ВТКомпетенции)) КАК РезультатыОценкиСотрудниковСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТРассчитанныеКомпетенции.Период КАК Период,
		|	ВТРассчитанныеКомпетенции.Сотрудник КАК Сотрудник,
		|	ВТРассчитанныеКомпетенции.Компетенция КАК Компетенция,
		|	ВТРассчитанныеКомпетенции.ПрошлыйУровень КАК ПрошлыйУровень
		|ПОМЕСТИТЬ ВТОбъединениеАвтоматаИОценки
		|ИЗ
		|	ВТРассчитанныеКомпетенции КАК ВТРассчитанныеКомпетенции
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТРезультатыПоследнегоРевью.Период,
		|	ВТРезультатыПоследнегоРевью.Сотрудник,
		|	ВТРезультатыПоследнегоРевью.Компетенция,
		|	ВТРезультатыПоследнегоРевью.ПрошлыйУровень
		|ИЗ
		|	ВТРезультатыПоследнегоРевью КАК ВТРезультатыПоследнегоРевью
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТОбъединениеАвтоматаИОценки.Сотрудник КАК Сотрудник,
		|	ВТОбъединениеАвтоматаИОценки.Компетенция КАК Компетенция,
		|	ВТОбъединениеАвтоматаИОценки.ПрошлыйУровень КАК ПрошлыйУровень
		|ПОМЕСТИТЬ ВТИтогиАвтоматаИРевью
		|ИЗ
		|	ВТОбъединениеАвтоматаИОценки КАК ВТОбъединениеАвтоматаИОценки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъединениеАвтоматаИОценки КАК ВТОбъединениеАвтоматаИОценки1
		|		ПО ВТОбъединениеАвтоматаИОценки.Сотрудник = ВТОбъединениеАвтоматаИОценки1.Сотрудник
		|		И ВТОбъединениеАвтоматаИОценки.Компетенция = ВТОбъединениеАвтоматаИОценки1.Компетенция
		|СГРУППИРОВАТЬ ПО
		|	ВТОбъединениеАвтоматаИОценки.Компетенция,
		|	ВТОбъединениеАвтоматаИОценки.Сотрудник,
		|	ВТОбъединениеАвтоматаИОценки.ПрошлыйУровень,
		|	ВТОбъединениеАвтоматаИОценки.Период
		|ИМЕЮЩИЕ
		|	МАКСИМУМ(ВТОбъединениеАвтоматаИОценки1.Период) = ВТОбъединениеАвтоматаИОценки.Период
		|	И НЕ ВТОбъединениеАвтоматаИОценки.ПрошлыйУровень ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////	
		|ВЫБРАТЬ
		|	ВТИтогиАвтоматаИРевью.Сотрудник КАК Сотрудник,
		|	ВТИтогиАвтоматаИРевью.Компетенция КАК Компетенция,
		|	ВТИтогиАвтоматаИРевью.ПрошлыйУровень КАК ПрошлыйУровень,
		|	ЕСТЬNULL(ВТРассчитанныеКомпетенции.Часов, 0) КАК Часов
		|ПОМЕСТИТЬ ВТИтогСЧасами
		|ИЗ
		|	ВТИтогиАвтоматаИРевью КАК ВТИтогиАвтоматаИРевью
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРассчитанныеКомпетенции КАК ВТРассчитанныеКомпетенции
		|		ПО ВТИтогиАвтоматаИРевью.Сотрудник = ВТРассчитанныеКомпетенции.Сотрудник
		|		И ВТИтогиАвтоматаИРевью.Компетенция = ВТРассчитанныеКомпетенции.Компетенция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТИтогСЧасами.Сотрудник КАК Сотрудник,
		|	ВТИтогСЧасами.Компетенция КАК Компетенция,
		|	ВТИтогСЧасами.Компетенция.ТипКомпетенции КАК ТипКомпетенции,
		|	ЕСТЬNULL(ВТИтогСЧасами.ПрошлыйУровень, ЗНАЧЕНИЕ(Перечисление.УровниЗнания.НеИзучено)) КАК УровеньЗнания,
		|	ЕСТЬNULL(ВТИтогСЧасами.Часов, 0) КАК Часов
		|ИЗ
		|	ВТИтогСЧасами КАК ВТИтогСЧасами";
	
	Запрос.УстановитьПараметр("Период"					, Период);
	
	ТаблицаГрадаций = ОценкаСотрудниковСервер.ПолучитьГрадацииВремениПоКомпетенциям(,
		Перечисления.ТипыКомпетенций.Профессиональные);
	Запрос.УстановитьПараметр("ТЗГрадацииКомпетенций"	, ТаблицаГрадаций);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'; en = 'Invalid object call on client.'");
#КонецЕсли