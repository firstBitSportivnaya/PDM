#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	ПроверяемыеРеквизиты.Добавить("Отдел");
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ВидОперации = Перечисления.ВидыОперацийКадровыеИзменения.ПриемПереводУвольнение Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Позиция");
		МассивНепроверяемыхРеквизитов.Добавить("Проект");
		
		Если ВидСобытия = Перечисления.ВидыКадровыхСобытий.Перевод
			Или ВидСобытия = Перечисления.ВидыКадровыхСобытий.Увольнение Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Офис");
			МассивНепроверяемыхРеквизитов.Добавить("Отдел");
			МассивНепроверяемыхРеквизитов.Добавить("Должность");
		КонецЕсли;
	Иначе
		Если Не Субподряд Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Офис");
			МассивНепроверяемыхРеквизитов.Добавить("Отдел");
			МассивНепроверяемыхРеквизитов.Добавить("Должность");
		КонецЕсли;
		
		Если ВидСобытия = Перечисления.ВидыКадровыхСобытий.Исключение Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Позиция");
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ПроектныеСобытия = Новый Массив;
	ПроектныеСобытия.Добавить(Перечисления.ВидыКадровыхСобытий.Привлечение);
	ПроектныеСобытия.Добавить(Перечисления.ВидыКадровыхСобытий.Исключение);
	
	Если ПроектныеСобытия.Найти(ВидСобытия) = Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период"		, ДатаСобытия);
		Запрос.УстановитьПараметр("Сотрудник"	, Сотрудник);
		Запрос.УстановитьПараметр("Регистратор"	, Ссылка);
		Запрос.УстановитьПараметр("ПроектныеСобытия", ПроектныеСобытия);
		Запрос.Текст = "ВЫБРАТЬ
			|	КадроваяИнформация.Регистратор КАК Регистратор
			|ИЗ
			|	РегистрСведений.КадроваяИнформация КАК КадроваяИнформация
			|ГДЕ
			|	КадроваяИнформация.Период = &Период
			|	И НЕ КадроваяИнформация.ВидСобытия В (&ПроектныеСобытия)
			|	И КадроваяИнформация.Сотрудник = &Сотрудник
			|	И НЕ КадроваяИнформация.Регистратор = &Регистратор";
		
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"ru = 'На дату %1 у сотрудника %2 уже зарегистрировано событие %3'",
				Формат(ДатаСобытия, "ДФ=dd.MM.yyyy;"), Сотрудник, ВыборкаРезультатаЗапроса.Регистратор);
			
			ОбщегоНазначения.СообщитьПользователю(НСтр(ТекстСообщения), , , , Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПараметрыПроведения = Документы.КадровыеИзменения.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПараметрыПроведения.Свойство("Реквизиты") Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыДокумента = ПараметрыПроведения.Реквизиты[0];
	
	Движения.КадроваяИнформация.Очистить();
	Движения.КадроваяИнформация.Записывать = Истина;
	Движения.Записать();
	
	Если РеквизитыДокумента.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Увольнение Тогда
		Результат = ПолучитьПроектыНаКоторыеПривлеченСотрудник();
		Если Результат.Количество() Тогда
			МассивКадровойИнформации = ПолучитьНедостающуюКадровуюИнформацию(
				Перечисления.ВидыКадровыхСобытий.Исключение, Результат.ВыгрузитьКолонку("Проект"));
			
			Для Каждого КадроваяИнформация Из МассивКадровойИнформации Цикл
				Запись = Движения.КадроваяИнформация.Добавить();
				Запись.Период		= РеквизитыДокумента.ДатаСобытия;
				Запись.Регистратор	= Ссылка;
				Запись.ВидСобытия	= Перечисления.ВидыКадровыхСобытий.Исключение;
				Запись.Сотрудник	= РеквизитыДокумента.Сотрудник;
				
				Для Каждого КлючИЗначение Из КадроваяИнформация Цикл	
					Если Не ЗначениеЗаполнено(Запись[КлючИЗначение.Ключ]) Тогда
						Запись[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Запись = Движения.КадроваяИнформация.Добавить();
	Запись.Период = РеквизитыДокумента.ДатаСобытия;
	Запись.Регистратор = Ссылка;
	
	ЗаполнитьЗначенияСвойств(Запись, РеквизитыДокумента);
	
	Если Не РеквизитыДокумента.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Прием 
		И Не (РеквизитыДокумента.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Привлечение И РеквизитыДокумента.Субподряд) Тогда
		
		МассивКадровойИнформации = ПолучитьНедостающуюКадровуюИнформацию(
			РеквизитыДокумента.ВидСобытия, РеквизитыДокумента.Проект);
		Если МассивКадровойИнформации.Количество() = 0 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"ru = 'На дату %1 у сотрудника  %2 нет записей кадровой информации!'",
				Формат(РеквизитыДокумента.ДатаСобытия, "ДФ=dd.MM.yyyy;"), РеквизитыДокумента.Сотрудник);
		
			ОбщегоНазначения.СообщитьПользователю(НСтр(ТекстСообщения), , , , Отказ);
		Иначе 
			КадроваяИнформация = МассивКадровойИнформации[0];
			Для Каждого КлючИЗначение Из КадроваяИнформация Цикл	
				Если Не ЗначениеЗаполнено(Запись[КлючИЗначение.Ключ]) Тогда
					Запись[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Движения.КадроваяИнформация.Записывать = Истина;
	
	КадровыйУчетСервер.ОбработатьДанныеНаставничестваПриНеобходимости(Ссылка);

КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Ссылка, "ДатаСобытия, Сотрудник");
	
	КадровыйУчетСервер.УдалитьЗаписьНаставничество(РеквизитыДокумента.ДатаСобытия,
		Неопределено, РеквизитыДокумента.Сотрудник);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПроектыНаКоторыеПривлеченСотрудник()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КадроваяИнформацияСрезПоследних.Период КАК Период,
	|	КадроваяИнформацияСрезПоследних.ВидСобытия КАК ВидСобытия,
	|	КадроваяИнформацияСрезПоследних.Проект КАК Проект
	|ПОМЕСТИТЬ ВТПривлечениеНаПроекты
	|ИЗ
	|	РегистрСведений.КадроваяИнформация.СрезПоследних(&Период, Сотрудник = &Сотрудник
	|	И ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Привлечение)) КАК КадроваяИнформацияСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КадроваяИнформацияСрезПоследних.Период КАК Период,
	|	КадроваяИнформацияСрезПоследних.ВидСобытия КАК ВидСобытия,
	|	КадроваяИнформацияСрезПоследних.Проект КАК Проект
	|ПОМЕСТИТЬ ВТИсключениеСПроектов
	|ИЗ
	|	РегистрСведений.КадроваяИнформация.СрезПоследних(&Период, Сотрудник = &Сотрудник
	|	И ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Исключение)) КАК КадроваяИнформацияСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПривлечениеНаПроекты.Период КАК ДатаПривлечения,
	|	ВТПривлечениеНаПроекты.Проект КАК Проект,
	|	ВТИсключениеСПроектов.Период КАК ДатаИсключения
	|ИЗ
	|	ВТПривлечениеНаПроекты КАК ВТПривлечениеНаПроекты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсключениеСПроектов КАК ВТИсключениеСПроектов
	|		ПО (ВТПривлечениеНаПроекты.Проект = ВТИсключениеСПроектов.Проект)
	|ГДЕ
	|	ВТИсключениеСПроектов.Период ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Период"		, Новый Граница(ДатаСобытия, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Сотрудник"	, Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Результат = РезультатЗапроса.Выгрузить();
	Иначе
		Результат = Новый ТаблицаЗначений;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьНедостающуюКадровуюИнформацию(ВидСобытияСсылка, ПроектСсылка)
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КадроваяИнформацияСрезПоследних.Офис КАК Офис,
	|	КадроваяИнформацияСрезПоследних.Проект КАК Проект,
	|	КадроваяИнформацияСрезПоследних.Отдел КАК Отдел,
	|	КадроваяИнформацияСрезПоследних.Должность КАК Должность,
	|	КадроваяИнформацияСрезПоследних.Позиция КАК Позиция
	|ИЗ
	|	РегистрСведений.КадроваяИнформация.СрезПоследних(&Период, Сотрудник = &Сотрудник
	|	И &ДополнительныеУсловия) КАК КадроваяИнформацияСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	КадроваяИнформацияСрезПоследних.Период УБЫВ";
	
	Запрос.УстановитьПараметр("Период"		, КонецДня(ДатаСобытия));
	Запрос.УстановитьПараметр("Сотрудник"	, Сотрудник);
	
	Если ВидСобытияСсылка = Перечисления.ВидыКадровыхСобытий.Перевод Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДополнительныеУсловия",
			"(ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Прием) ИЛИ ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Перевод))");
	ИначеЕсли ВидСобытияСсылка = Перечисления.ВидыКадровыхСобытий.Увольнение Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДополнительныеУсловия",
			"(ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Прием) ИЛИ ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Перевод))");
	ИначеЕсли ВидСобытияСсылка = Перечисления.ВидыКадровыхСобытий.Привлечение И Не Субподряд Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДополнительныеУсловия",
			"(ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Прием) ИЛИ ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Перевод))");
	ИначеЕсли ВидСобытияСсылка = Перечисления.ВидыКадровыхСобытий.Исключение Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДополнительныеУсловия",
			"ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Привлечение) И Проект В (&Проект)");
		Запрос.УстановитьПараметр("Проект", ПроектСсылка);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ДополнительныеУсловия", "");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	
	МассивКадровойИнформации = Новый Массив;
	Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		КадроваяИнформация = ИнициализироватьСтруктуруКадровойИнформации();
		ЗаполнитьЗначенияСвойств(КадроваяИнформация, ВыборкаРезультатаЗапроса);
		МассивКадровойИнформации.Добавить(КадроваяИнформация);
	КонецЕсли;
	
	Возврат МассивКадровойИнформации;
	
КонецФункции

Функция ИнициализироватьСтруктуруКадровойИнформации()
	
	Возврат Новый Структура("Офис, Проект, Отдел, Должность, Позиция");
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'; en = 'Invalid object call on client.'");
#КонецЕсли
